.container {
  width: 96%;
  max-width: 960px;
  display: block;
  margin: auto;
}

.contents {
  display: grid;
  // grid-template-columns: repeat(3, auto);
  grid-template-columns: repeat(auto-fill, 420px);
  // grid-template-rows: repeat(3, auto);
  grid-row-gap: 1rem;
  grid-column-gap: 1rem;
}

h1 {
  margin-top: 1em;
}

h3.text-info {
  margin-top: 1em;
}

.btn {
  // border: 2px solid #fff;
  border: 2px solid #999;
}

// TODO: Add New
/**
  * ======= Flex Box =======
  * Example:
  * @include flex(center, center)
*/
@mixin flex($justify: null, $align: null, $column: null, $wrap: null) {
  display: flex;

  /**
    * justify-content / Horizontal ===（1st Argument）
    * @see: https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content
  */
  @if $justify==start {
    // Left align |||--- default
    justify-content: flex-start;
  }

  @else if $justify==end {
    // Align right ---|||
    justify-content: flex-end;
  }

  @else if $justify==center {
    // Centering -|||-
    justify-content: center;
  }

  @else if $justify==between {
    // Both ends |-|-|
    justify-content: space-between;
  }

  @else if $justify==around {
    // Equivalent -|-|-|-
    justify-content: space-around;
  }

  @else {
    // null = write: null
  }

  /**
    * align-items / Vertical |||（2nd Argument）
    * @see: https://developer.mozilla.org/en-US/docs/Web/CSS/align-items
  */
  @if $align==start {
    // Upper Align ⁻⁻⁻ default
    align-items: flex-start;
  }

  @else if $align==end {
    // BottomAlign ___
    align-items: flex-end;
  }

  @else if $align==center {
    // Centering ---
    align-items: center;
  }

  @else if $align==baseline {
    // Base Line -=-
    align-items: baseline;
  }

  @else if $align==stretch {
    // Expand Height |||
    align-items: stretch;
  }

  @else if $align==null {
    // empty
  }

  /**
    * Column === |||（3rd Argument）
    * @see: https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction
  */
  @if $column==row {
    // Horizontal Column ===
    flex-direction: row; // 横並び default
  }

  @else if $column==column {
    // Vertical Column |||
    flex-direction: column;
  }

  @else if $column==null {
    // empty
  }

  /**
    * Wrap = Fold at the edge -|（4th Argument）
    * @see: https://developer.mozilla.org/en-US/docs/Web/CSS/flex-wrap
  */
  @if $wrap==wrap {
    // Do Wrap --|↓
    flex-wrap: wrap;
  }

  @else if $wrap==nowrap {
    // Not Wrap --|-->
    flex-wrap: nowrap;
  }

  @else if $wrap==reverse {
    // Upper From Bottom ↑↑↑
    flex-wrap: wrap-reverse;
  }

  @else if $wrap==null {
    // empty
  }
}

/* Local Mock Design */
.bx {
  padding: 12px;
  min-height: 120px;
  background: var(--bs-warning);
  background-color: #eee;

  >.mod {
    display: block;
    margin: 4px;
    padding: 12px 24px;
    background-color: #ccc;
  }
}

.box1 {
  @include flex(center);
}

.box2 {
  @include flex(start, center);
}

.box3 {
  @include flex(around, end);
}